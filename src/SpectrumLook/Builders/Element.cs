using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SpectrumLook.Builders
{
    /// <summary>
    /// This class is used to define what kind of items that the list builders are going
    /// to generate.  All List builders use this item but some of the list builders may
    /// not use all the input fields.
    /// By Patrick Tobin
    /// </summary>
    public class Element
    {
        #region MEMBERS

        #region PUBLIC

        public override string ToString()
        {
            return Annotation + ", " + Mz.ToString("0.00");
        }

        #endregion

        #region PRIVATE
        /// <summary>
        /// This stores the annotation that is presented on the graph.  And generated by the
        /// TheoryListBuilder.
        /// </summary>
        private string m_annotation;

        /// <summary>
        /// This value stores the relative intensity that is shown on the graph and generated
        /// by the ActualListBuilder.
        /// </summary>
        private double m_intensity;

        /// <summary>
        /// This boolean value tells the ComparedListBuilder, the plot and the fragment ladder
        /// rather this value is matched or not.  This is set by the ComparedListBuilder Class.
        /// </summary>
        private bool m_matched;

        /// <summary>
        /// This is the mzValue that the plot and fragment ladder present.
        /// This value is both set by the ActualListBuilder and the TheoryListBuilder.
        /// </summary>
        private double m_mzValue;

        #endregion

        #endregion

        #region CONSTRUCTOR
        /// <summary>
        /// This constructor currently does nothing.
        /// </summary>
        public Element()
        {
        }

        public Element(double mz, double intensity)
        {
            m_mzValue = mz;
            m_intensity = intensity;
        }
        #endregion

        #region PROPERTIES

        public string Annotation
        {
            get
            {
                return m_annotation;
            }
            set
            {
                m_annotation = value;
            }
        }

        public double Intensity
        {
            get
            {
                return m_intensity;
            }
            set
            {
                m_intensity = value;
            }
        }

        public bool Matched
        {
            get
            {
                return m_matched;
            }
            set
            {
                m_matched = value;
            }
        }

        public double Mz
        {
            get
            {
                return m_mzValue;
            }
            set
            {
                m_mzValue = value;
            }
        }

        #endregion
    }
}
